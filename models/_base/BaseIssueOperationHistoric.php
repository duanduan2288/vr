<?php

/**
 * This is the model base class for the table "issue_operation_historic".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "IssueOperationHistoric".
 *
 * Columns in table "issue_operation_historic" available as properties of the model,
 * followed by relations of table "issue_operation_historic" available as properties of the model.
 *
 * @property integer $id
 * @property string $issue_id
 * @property string $operator_id
 * @property string $state
 * @property string $operation_date
 * @property string $operator_ip
 * @property string $operation
 *
 * @property Issue $issue
 * @property User $operator
 */
abstract class BaseIssueOperationHistoric extends AMapper {

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'issue_operation_historic';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'IssueOperationHistoric|IssueOperationHistorics', $n);
	}

	public static function representingColumn() {
		return 'state';
	}

	public function rules() {
		return array(
			array('id, issue_id, operator_id, state, operation_date, operator_ip, attached_data', 'required'),
			array('id', 'numerical', 'integerOnly'=>true),
			array('issue_id, operator_id', 'length', 'max'=>10),
			array('state, operator_ip', 'length', 'max'=>56),
			array('id, issue_id, operator_id, state, operation_date, operator_ip, attached_data', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
			'issue' => array(self::BELONGS_TO, 'Issue', 'issue_id'),
			'operator' => array(self::BELONGS_TO, 'User', 'operator_id'),
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'id' => Yii::t('app', 'ID'),
			'issue_id' => null,
			'operator_id' => null,
			'state' => Yii::t('app', 'State'),
			'operation_date' => Yii::t('app', 'Operation Date'),
			'operator_ip' => Yii::t('app', 'Operator Ip'),
			'attached_data' => Yii::t('app', 'attached_data'),
			'issue' => null,
			'operator' => null,
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('id', $this->id);
		$criteria->compare('issue_id', $this->issue_id);
		$criteria->compare('operator_id', $this->operator_id);
		$criteria->compare('state', $this->state, true);
		$criteria->compare('operation_date', $this->operation_date, true);
		$criteria->compare('operator_ip', $this->operator_ip, true);
		$criteria->compare('attached_data', $this->attached_data, true);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}
	
	/**
	 * @return array customized fields (name=>label)
	 */
	public function customFields()
	{
		return array(
    		'id' => array( 'type' => 'textField', 'htmlOptions'=>array( ),  ),
    		'issue_id' => array( 'type' => 'dropDownList', 'htmlOptions'=>array( ), 'modelClass'=>'Issue' ),
    		'operator_id' => array( 'type' => 'dropDownList', 'htmlOptions'=>array( ), 'modelClass'=>'User' ),
    		'state' => array( 'type' => 'textField', 'htmlOptions'=>array(  'size'=>56,'maxlength'=>56 ),  ),
    		'operation_date' => array( 'type' => 'textField', 'htmlOptions'=>array( ),  ),
    		'operator_ip' => array( 'type' => 'textField', 'htmlOptions'=>array(  'size'=>56,'maxlength'=>56 ),  ),
		);
	}	
}